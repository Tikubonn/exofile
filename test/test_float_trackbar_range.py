
from exofile import FloatTrackBarRange, TrackBarType
from unittest import TestCase 

class TestFloatTrackBarRange (TestCase):

  def test_serialize (self):

    #without parameter

    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=False, decelerate=False)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,1")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=True, decelerate=False)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,65")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=False, decelerate=True)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,33")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=True, decelerate=True)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,97")

    #with parameter

    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=False, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,1,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=True, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,65,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=False, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,33,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=True, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,97,100")

    #named id without parameter

    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=False, decelerate=False)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,15@回転")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=True, decelerate=False)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,79@回転")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=False, decelerate=True)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,47@回転")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=True, decelerate=True)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,111@回転")

    #named id with parameter

    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=False, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,15@回転,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=True, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,79@回転,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=False, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,47@回転,100")
    trackrange = FloatTrackBarRange(-100.5, 100.5, "回転", accelerate=True, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,111@回転,100")

    #single value without parameter (keyword args will be ignored)

    trackrange = FloatTrackBarRange(100.5)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=False, decelerate=False)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=True, decelerate=False)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=False, decelerate=True)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=True, decelerate=True)
    self.assertEqual(trackrange.serialize(), "100.5")

    #single value with parameter (parameter and keyword args will be ignored)

    trackrange = FloatTrackBarRange(100.5, parameter=100)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=False, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=True, decelerate=False, parameter=100)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=False, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "100.5")
    trackrange = FloatTrackBarRange(100.5, accelerate=True, decelerate=True, parameter=100)
    self.assertEqual(trackrange.serialize(), "100.5")

  def test_copy (self):

    #with parameter

    trackrange = FloatTrackBarRange(-100.5, 100.5, TrackBarType.LINEAR, accelerate=True, decelerate=True, parameter=100)
    trackrangecopy = FloatTrackBarRange(trackrange)
    self.assertEqual(trackrangecopy.start, -100.5)
    self.assertEqual(trackrangecopy.end, 100.5)
    self.assertEqual(trackrangecopy.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrangecopy.accelerate, True)
    self.assertEqual(trackrangecopy.decelerate, True)
    self.assertEqual(trackrangecopy.parameter, 100)
    self.assertEqual(trackrangecopy.serialize(), "-100.5,100.5,97,100")

    #single value 

    trackrange = FloatTrackBarRange(100.5)
    trackrangecopy = FloatTrackBarRange(trackrange)
    self.assertEqual(trackrangecopy.start, 100.5)
    self.assertEqual(trackrangecopy.end, 100.5)
    self.assertEqual(trackrangecopy.tracktype, TrackBarType.NONE)
    self.assertEqual(trackrangecopy.accelerate, False)
    self.assertEqual(trackrangecopy.decelerate, False)
    self.assertEqual(trackrangecopy.parameter, None)
    self.assertEqual(trackrangecopy.serialize(), "100.5")

  def test_deserialize (self):

    #without parameter

    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,1")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,1")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,65")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,65")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,33")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,33")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,97")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,97")

    #with parameter

    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,1,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,1,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,65,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,65,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,33,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,33,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,97,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.LINEAR)
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,97,100")

    #named id without parameter

    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,15@回転")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,15@回転")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,79@回転")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,79@回転")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,47@回転")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,47@回転")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,111@回転")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,111@回転")

    #named id with parameter

    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,15@回転,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,15@回転,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,79@回転,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,79@回転,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,47@回転,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,47@回転,100")
    trackrange = FloatTrackBarRange.deserialize("-100.5,100.5,111@回転,100")
    self.assertEqual(trackrange.start, -100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, "回転")
    self.assertEqual(trackrange.accelerate, True)
    self.assertEqual(trackrange.decelerate, True)
    self.assertEqual(trackrange.parameter, 100)
    self.assertEqual(trackrange.serialize(), "-100.5,100.5,111@回転,100")

    #single value without parameter

    trackrange = FloatTrackBarRange.deserialize("100.5")
    self.assertEqual(trackrange.start, 100.5)
    self.assertEqual(trackrange.end, 100.5)
    self.assertEqual(trackrange.tracktype, TrackBarType.NONE)
    self.assertEqual(trackrange.accelerate, False)
    self.assertEqual(trackrange.decelerate, False)
    self.assertEqual(trackrange.parameter, None)
    self.assertEqual(trackrange.serialize(), "100.5")
